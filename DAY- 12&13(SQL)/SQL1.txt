1.id,name,dpt,college name write a query to create table and retrieve data
CREATE TABLE student (
    emp_id INT PRIMARY KEY,
    emp_name VARCHAR(100),
    course VARCHAR(100),
    college name VARCHAR(100)
);

INSERT INTO student (emp_id, emp_name, course, college_name)
VALUES 
(1, 'Faizan Akram', 'Java-b2', 'VSSUT'),
(2, 'Faiz', 'Devops', 'ITER'),
(3, 'Rohit', 'System_engineer', 'VSSUT');

SELECT * FROM student;

2.write a sales/retail query to insert update and delete
CREATE TABLE SALES (
  sale_id  INT PRIMARY KEY,
  sale_date DATE
  product_name VARCHAR(100),
  quantity INT,
  PRICE DECIMAL(10,2),
);
INSERT INTO SALES (sale_id, sale_date, product_name, quantity, PRICE)
VALUES 
(1,'2025-06-08','T-shirt', 5, 199),
(2,'2025-06-09','Shirt', 10, 399),
(3,'2025-06-10','Jeans', 15, 899.99),
SELECT * FROM SALES;
UPDATE SALES SET quantity=13 WHERE sale_id='2';
SELECT * FROM SALES;
DELETE FROM SALES WHERE sale_id='3';
SELECT * FROM SALES;



3.Write a query to fetch employee details from a sample database.
Use ORDER BY to sort product prices in ascending order.
Apply LIKE to find customers whose names begin with "J".


CREATE TABLE Employee (
  emp_id  INT PRIMARY KEY,
  emp_name VARCHAR(100)
);
INSERT INTO Employee (emp_id, emp_name)
VALUES 
(1,'FAIZAN'),
(2,'ROHIT'),
(3,'KISHOR');

SELECT * FROM Employee;

CREATE TABLE CUSTOMER (
  cust_id  INT PRIMARY KEY,
  cust_name VARCHAR(50),
  product_name VARCHAR(100),
  price DECIMAL(10,2)
);
INSERT INTO CUSTOMER (cust_id, cust_name, product_name, price)
VALUES 
(1,'FAIZAN', 'Laptop', 49990),
(2,'ROHIT', 'Printer', 15499.99),
(3,'JATIN', 'Mobile', 59999.99);

SELECT * FROM CUSTOMER ORDER BY price ASC;
SELECT * FROM CUSTOMER WHERE cust_name LIKE 'J%';

4.Create a query using INNER JOIN to link customers and their orders.

CREATE TABLE Customer (
  cust_id INT PRIMARY KEY,
  cust_name VARCHAR(100)
);

INSERT INTO Customer (cust_id, cust_name)
VALUES 
(1, 'FAIZAN'),
(2, 'ROHIT'),
(3, 'KISHOR');

CREATE TABLE Products (
  pro_id INT PRIMARY KEY,
  cust_id INT, 
  product_name VARCHAR(100),
  price DECIMAL(10,2)
);

INSERT INTO Products (pro_id, cust_id, product_name, price)
VALUES 
(100, 1, 'Laptop', 49990),
(200, 2, 'Printer', 15499.99),
(300, 3, 'Mobile', 59999.99);

SELECT c.cust_id, c.cust_name, p.pro_id, p.product_name, p.price FROM Customer AS c
INNER JOIN Products AS p 
ON c.cust_id = p.cust_id;



5.Use LEFT JOIN to display all employees with their assigned projects.

CREATE TABLE employees (
  emp_id INT PRIMARY KEY,
  emp_name VARCHAR(100)
);

CREATE TABLE projects (
  project_id INT PRIMARY KEY,
  emp_id INT,
  project_name VARCHAR(100)
);

INSERT INTO employees (emp_id, emp_name)
VALUES 
(1, 'Faizan'),
(2, 'Rohit'),
(3, 'Kishor');

INSERT INTO projects (project_id, emp_id, project_name)
VALUES 
(101, 1, 'BANKING SYSTEM'),
(102, 2, 'ECOMMERCE PLATFORM');

SELECT e.emp_name, p.project_name FROM employees AS e
LEFT JOIN projects AS p
ON e.emp_id = p.emp_id;


6.Write an SQL statement using FULL OUTER JOIN to combine suppliers and products.


CREATE TABLE suppliers (
  supplier_id INT PRIMARY KEY,
  supplier_name VARCHAR(100)
);

CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name INT
);

INSERT INTO suppliers (supplier_id, supplier_name)
VALUES 
(1, 'Faizan'),
(2, 'Rohit'),
(3, 'Kishor');

INSERT INTO products (product_id, product_name)
VALUES 
(101,'BANKING SYSTEM'),
(102,'ECOMMERCE PLATFORM');

SELECT s.supplier_id, s.supplier_name, p.product_id, p.product_name
FROM suppliers AS s
FULL OUTER JOIN products AS p
ON s.supplier_id = p.supplier_id;